Index.PACKAGES = {"pdi" : [], "pdi.jwt" : [{"name" : "pdi.jwt.JwtArgonaut", "shortDescription" : "", "object" : "pdi\/jwt\/JwtArgonaut$.html", "members_class" : [{"label" : "parseHeader", "tail" : "(header: String): JwtHeader", "member" : "pdi.jwt.JwtArgonaut.parseHeader", "link" : "pdi\/jwt\/JwtArgonaut.html#parseHeader(header:String):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "parseClaim", "tail" : "(claim: String): JwtClaim", "member" : "pdi.jwt.JwtArgonaut.parseClaim", "link" : "pdi\/jwt\/JwtArgonaut.html#parseClaim(claim:String):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "clock", "tail" : ": Clock", "member" : "pdi.jwt.JwtArgonaut.clock", "link" : "pdi\/jwt\/JwtArgonaut.html#clock:java.time.Clock", "kind" : "val"}, {"label" : "getAlgorithm", "tail" : "(header: Json): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtArgonautParser.getAlgorithm", "link" : "pdi\/jwt\/JwtArgonaut.html#getAlgorithm(header:argonaut.Json):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "stringify", "tail" : "(value: Json): String", "member" : "pdi.jwt.JwtArgonautParser.stringify", "link" : "pdi\/jwt\/JwtArgonaut.html#stringify(value:argonaut.Json):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): Json", "member" : "pdi.jwt.JwtArgonautParser.parse", "link" : "pdi\/jwt\/JwtArgonaut.html#parse(value:String):argonaut.Json", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtArgonaut.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtArgonaut.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtArgonaut.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: JwtHeader, claim: JwtClaim, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtArgonaut.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtArgonaut.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: JwtClaim, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtArgonaut.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtArgonaut.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtArgonaut.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtArgonaut.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtArgonaut.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtArgonaut.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtArgonaut.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtArgonaut.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtArgonaut.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtArgonaut.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtArgonaut.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtArgonaut.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtArgonaut.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtArgonaut.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtArgonaut.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtArgonaut.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtArgonaut.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtArgonaut.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtArgonaut.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtArgonaut.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parseHeader", "tail" : "(header: String): JwtHeader", "member" : "pdi.jwt.JwtArgonaut.parseHeader", "link" : "pdi\/jwt\/JwtArgonaut$.html#parseHeader(header:String):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "parseClaim", "tail" : "(claim: String): JwtClaim", "member" : "pdi.jwt.JwtArgonaut.parseClaim", "link" : "pdi\/jwt\/JwtArgonaut$.html#parseClaim(claim:String):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "ExtractJsonFieldToType", "tail" : "", "member" : "pdi.jwt.JwtArgonaut.ExtractJsonFieldToType", "link" : "pdi\/jwt\/JwtArgonaut$.html#ExtractJsonFieldToTypeextendsAnyRef", "kind" : "implicit class"}, {"label" : "apply", "tail" : "(clock: Clock): JwtArgonaut", "member" : "pdi.jwt.JwtArgonaut.apply", "link" : "pdi\/jwt\/JwtArgonaut$.html#apply(clock:java.time.Clock):pdi.jwt.JwtArgonaut", "kind" : "def"}, {"label" : "getAlgorithm", "tail" : "(header: Json): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtArgonautParser.getAlgorithm", "link" : "pdi\/jwt\/JwtArgonaut$.html#getAlgorithm(header:argonaut.Json):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "stringify", "tail" : "(value: Json): String", "member" : "pdi.jwt.JwtArgonautParser.stringify", "link" : "pdi\/jwt\/JwtArgonaut$.html#stringify(value:argonaut.Json):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): Json", "member" : "pdi.jwt.JwtArgonautParser.parse", "link" : "pdi\/jwt\/JwtArgonaut$.html#parse(value:String):argonaut.Json", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtArgonaut$.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtArgonaut$.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtArgonaut$.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonaut$.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: JwtHeader, claim: JwtClaim, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonaut$.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtArgonaut$.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtArgonaut$.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: JwtClaim, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtArgonaut$.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonaut$.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonaut$.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtArgonaut$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtArgonaut$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtArgonaut$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtArgonaut$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtArgonaut$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtArgonaut$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtArgonaut$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtArgonaut$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtArgonaut$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtArgonaut$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtArgonaut$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtArgonaut$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtArgonaut$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtArgonaut$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtArgonaut$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtArgonaut$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtArgonaut$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtArgonaut$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtArgonaut$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pdi\/jwt\/JwtArgonaut.html", "kind" : "object"}, {"name" : "pdi.jwt.JwtArgonautParser", "members_trait" : [{"label" : "getAlgorithm", "tail" : "(header: Json): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtArgonautParser.getAlgorithm", "link" : "pdi\/jwt\/JwtArgonautParser.html#getAlgorithm(header:argonaut.Json):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "stringify", "tail" : "(value: Json): String", "member" : "pdi.jwt.JwtArgonautParser.stringify", "link" : "pdi\/jwt\/JwtArgonautParser.html#stringify(value:argonaut.Json):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): Json", "member" : "pdi.jwt.JwtArgonautParser.parse", "link" : "pdi\/jwt\/JwtArgonautParser.html#parse(value:String):argonaut.Json", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtArgonautParser.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtArgonautParser.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtArgonautParser.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtArgonautParser.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: H, claim: C, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtArgonautParser.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtArgonautParser.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtArgonautParser.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: C, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtArgonautParser.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtArgonautParser.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtArgonautParser.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtArgonautParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtArgonautParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtArgonautParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtArgonautParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtArgonautParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtArgonautParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtArgonautParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtArgonautParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtArgonautParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtArgonautParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtArgonautParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtArgonautParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtArgonautParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtArgonautParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtArgonautParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtArgonautParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtArgonautParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtArgonautParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtArgonautParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extractNotBefore", "tail" : "(claim: C): Option[Long]", "member" : "pdi.jwt.JwtCore.extractNotBefore", "link" : "pdi\/jwt\/JwtArgonautParser.html#extractNotBefore(claim:C):Option[Long]", "kind" : "abstract def"}, {"label" : "extractExpiration", "tail" : "(claim: C): Option[Long]", "member" : "pdi.jwt.JwtCore.extractExpiration", "link" : "pdi\/jwt\/JwtArgonautParser.html#extractExpiration(claim:C):Option[Long]", "kind" : "abstract def"}, {"label" : "extractAlgorithm", "tail" : "(header: H): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtCore.extractAlgorithm", "link" : "pdi\/jwt\/JwtArgonautParser.html#extractAlgorithm(header:H):Option[pdi.jwt.JwtAlgorithm]", "kind" : "abstract def"}, {"label" : "parseClaim", "tail" : "(claim: String): C", "member" : "pdi.jwt.JwtCore.parseClaim", "link" : "pdi\/jwt\/JwtArgonautParser.html#parseClaim(claim:String):C", "kind" : "abstract def"}, {"label" : "parseHeader", "tail" : "(header: String): H", "member" : "pdi.jwt.JwtCore.parseHeader", "link" : "pdi\/jwt\/JwtArgonautParser.html#parseHeader(header:String):H", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "pdi\/jwt\/JwtArgonautParser.html", "kind" : "trait"}, {"name" : "pdi.jwt.JwtCirce", "shortDescription" : "", "object" : "pdi\/jwt\/JwtCirce$.html", "members_class" : [{"label" : "parseClaim", "tail" : "(claim: String): JwtClaim", "member" : "pdi.jwt.JwtCirce.parseClaim", "link" : "pdi\/jwt\/JwtCirce.html#parseClaim(claim:String):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "parseHeader", "tail" : "(header: String): JwtHeader", "member" : "pdi.jwt.JwtCirce.parseHeader", "link" : "pdi\/jwt\/JwtCirce.html#parseHeader(header:String):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "clock", "tail" : ": Clock", "member" : "pdi.jwt.JwtCirce.clock", "link" : "pdi\/jwt\/JwtCirce.html#clock:java.time.Clock", "kind" : "val"}, {"label" : "getAlg", "tail" : "(cursor: HCursor): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtCirceParser.getAlg", "link" : "pdi\/jwt\/JwtCirce.html#getAlg(cursor:io.circe.HCursor):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "getAlgorithm", "tail" : "(header: Json): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtCirceParser.getAlgorithm", "link" : "pdi\/jwt\/JwtCirce.html#getAlgorithm(header:io.circe.Json):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "stringify", "tail" : "(value: Json): String", "member" : "pdi.jwt.JwtCirceParser.stringify", "link" : "pdi\/jwt\/JwtCirce.html#stringify(value:io.circe.Json):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): Json", "member" : "pdi.jwt.JwtCirceParser.parse", "link" : "pdi\/jwt\/JwtCirce.html#parse(value:String):io.circe.Json", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtCirce.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtCirce.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtCirce.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: JwtHeader, claim: JwtClaim, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtCirce.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtCirce.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: JwtClaim, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtCirce.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtCirce.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtCirce.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtCirce.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtCirce.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtCirce.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtCirce.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtCirce.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtCirce.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtCirce.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtCirce.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtCirce.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtCirce.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtCirce.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtCirce.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtCirce.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtCirce.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtCirce.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtCirce.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtCirce.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parseClaim", "tail" : "(claim: String): JwtClaim", "member" : "pdi.jwt.JwtCirce.parseClaim", "link" : "pdi\/jwt\/JwtCirce$.html#parseClaim(claim:String):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "parseHeader", "tail" : "(header: String): JwtHeader", "member" : "pdi.jwt.JwtCirce.parseHeader", "link" : "pdi\/jwt\/JwtCirce$.html#parseHeader(header:String):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "apply", "tail" : "(clock: Clock): JwtCirce", "member" : "pdi.jwt.JwtCirce.apply", "link" : "pdi\/jwt\/JwtCirce$.html#apply(clock:java.time.Clock):pdi.jwt.JwtCirce", "kind" : "def"}, {"label" : "getAlg", "tail" : "(cursor: HCursor): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtCirceParser.getAlg", "link" : "pdi\/jwt\/JwtCirce$.html#getAlg(cursor:io.circe.HCursor):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "getAlgorithm", "tail" : "(header: Json): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtCirceParser.getAlgorithm", "link" : "pdi\/jwt\/JwtCirce$.html#getAlgorithm(header:io.circe.Json):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "stringify", "tail" : "(value: Json): String", "member" : "pdi.jwt.JwtCirceParser.stringify", "link" : "pdi\/jwt\/JwtCirce$.html#stringify(value:io.circe.Json):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): Json", "member" : "pdi.jwt.JwtCirceParser.parse", "link" : "pdi\/jwt\/JwtCirce$.html#parse(value:String):io.circe.Json", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtCirce$.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtCirce$.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtCirce$.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirce$.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: JwtHeader, claim: JwtClaim, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirce$.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtCirce$.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtCirce$.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: JwtClaim, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtCirce$.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirce$.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirce$.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirce$.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtCirce$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtCirce$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtCirce$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtCirce$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtCirce$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtCirce$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtCirce$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtCirce$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtCirce$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtCirce$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtCirce$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtCirce$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtCirce$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtCirce$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtCirce$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtCirce$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtCirce$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtCirce$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtCirce$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pdi\/jwt\/JwtCirce.html", "kind" : "object"}, {"name" : "pdi.jwt.JwtCirceParser", "members_trait" : [{"label" : "getAlg", "tail" : "(cursor: HCursor): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtCirceParser.getAlg", "link" : "pdi\/jwt\/JwtCirceParser.html#getAlg(cursor:io.circe.HCursor):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "getAlgorithm", "tail" : "(header: Json): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtCirceParser.getAlgorithm", "link" : "pdi\/jwt\/JwtCirceParser.html#getAlgorithm(header:io.circe.Json):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "stringify", "tail" : "(value: Json): String", "member" : "pdi.jwt.JwtCirceParser.stringify", "link" : "pdi\/jwt\/JwtCirceParser.html#stringify(value:io.circe.Json):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): Json", "member" : "pdi.jwt.JwtCirceParser.parse", "link" : "pdi\/jwt\/JwtCirceParser.html#parse(value:String):io.circe.Json", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[Json]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(Json, Json, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Json): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Json, claim: Json): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtCirceParser.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtCirceParser.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtCirceParser.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtCirceParser.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: H, claim: C, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtCirceParser.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtCirceParser.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtCirceParser.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: C, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtCirceParser.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtCirceParser.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtCirceParser.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtCirceParser.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtCirceParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtCirceParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtCirceParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtCirceParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtCirceParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtCirceParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtCirceParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtCirceParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtCirceParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtCirceParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtCirceParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtCirceParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtCirceParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtCirceParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtCirceParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtCirceParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtCirceParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtCirceParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtCirceParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extractNotBefore", "tail" : "(claim: C): Option[Long]", "member" : "pdi.jwt.JwtCore.extractNotBefore", "link" : "pdi\/jwt\/JwtCirceParser.html#extractNotBefore(claim:C):Option[Long]", "kind" : "abstract def"}, {"label" : "extractExpiration", "tail" : "(claim: C): Option[Long]", "member" : "pdi.jwt.JwtCore.extractExpiration", "link" : "pdi\/jwt\/JwtCirceParser.html#extractExpiration(claim:C):Option[Long]", "kind" : "abstract def"}, {"label" : "extractAlgorithm", "tail" : "(header: H): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtCore.extractAlgorithm", "link" : "pdi\/jwt\/JwtCirceParser.html#extractAlgorithm(header:H):Option[pdi.jwt.JwtAlgorithm]", "kind" : "abstract def"}, {"label" : "parseClaim", "tail" : "(claim: String): C", "member" : "pdi.jwt.JwtCore.parseClaim", "link" : "pdi\/jwt\/JwtCirceParser.html#parseClaim(claim:String):C", "kind" : "abstract def"}, {"label" : "parseHeader", "tail" : "(header: String): H", "member" : "pdi.jwt.JwtCore.parseHeader", "link" : "pdi\/jwt\/JwtCirceParser.html#parseHeader(header:String):H", "kind" : "abstract def"}], "shortDescription" : "Implementation of JwtCore using Json from Circe.", "trait" : "pdi\/jwt\/JwtCirceParser.html", "kind" : "trait"}, {"name" : "pdi.jwt.JwtJson4s", "shortDescription" : "", "object" : "pdi\/jwt\/JwtJson4s$.html", "members_class" : [{"label" : "RichJwtHeader", "tail" : "", "member" : "pdi.jwt.JwtJson4sImplicits.RichJwtHeader", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#RichJwtHeaderextendsAnyRef", "kind" : "implicit class"}, {"label" : "RichJwtClaim", "tail" : "", "member" : "pdi.jwt.JwtJson4sImplicits.RichJwtClaim", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#RichJwtClaimextendsAnyRef", "kind" : "implicit class"}, {"label" : "parseClaim", "tail" : "(claim: String): JwtClaim", "member" : "pdi.jwt.JwtJson4s.parseClaim", "link" : "pdi\/jwt\/JwtJson4s.html#parseClaim(claim:String):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "parseHeader", "tail" : "(header: String): JwtHeader", "member" : "pdi.jwt.JwtJson4s.parseHeader", "link" : "pdi\/jwt\/JwtJson4s.html#parseHeader(header:String):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "clock", "tail" : ": Clock", "member" : "pdi.jwt.JwtJson4s.clock", "link" : "pdi\/jwt\/JwtJson4s.html#clock:java.time.Clock", "kind" : "val"}, {"label" : "formats", "tail" : ": Formats { ... \/* 2 definitions in type refinement *\/ }", "member" : "pdi.jwt.JwtJson4sParser.formats", "link" : "pdi\/jwt\/JwtJson4s.html#formats:org.json4s.Formats{valdateFormat:org.json4s.DateFormat;valtypeHints:org.json4s.TypeHints}", "kind" : "implicit val"}, {"label" : "stringify", "tail" : "(value: JObject): String", "member" : "pdi.jwt.JwtJson4sParser.stringify", "link" : "pdi\/jwt\/JwtJson4s.html#stringify(value:org.json4s.JObject):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): JObject", "member" : "pdi.jwt.JwtJson4sParser.parse", "link" : "pdi\/jwt\/JwtJson4s.html#parse(value:String):org.json4s.JObject", "kind" : "def"}, {"label" : "filterClaimFields", "tail" : "(json: JObject): JObject", "member" : "pdi.jwt.JwtJson4sCommon.filterClaimFields", "link" : "pdi\/jwt\/JwtJson4s.html#filterClaimFields(json:org.json4s.JObject):org.json4s.JObject", "kind" : "def"}, {"label" : "extractLong", "tail" : "(json: JObject, fieldName: String): Option[Long]", "member" : "pdi.jwt.JwtJson4sCommon.extractLong", "link" : "pdi\/jwt\/JwtJson4s.html#extractLong(json:org.json4s.JObject,fieldName:String):Option[Long]", "kind" : "def"}, {"label" : "extractStringSetOrString", "tail" : "(json: JObject, fieldName: String): Option[Set[String]]", "member" : "pdi.jwt.JwtJson4sCommon.extractStringSetOrString", "link" : "pdi\/jwt\/JwtJson4s.html#extractStringSetOrString(json:org.json4s.JObject,fieldName:String):Option[Set[String]]", "kind" : "def"}, {"label" : "extractString", "tail" : "(json: JObject, fieldName: String): Option[String]", "member" : "pdi.jwt.JwtJson4sCommon.extractString", "link" : "pdi\/jwt\/JwtJson4s.html#extractString(json:org.json4s.JObject,fieldName:String):Option[String]", "kind" : "def"}, {"label" : "writeHeader", "tail" : "(header: JwtHeader): JValue", "member" : "pdi.jwt.JwtJson4sCommon.writeHeader", "link" : "pdi\/jwt\/JwtJson4s.html#writeHeader(header:pdi.jwt.JwtHeader):org.json4s.JValue", "kind" : "def"}, {"label" : "readHeader", "tail" : "(json: JValue): JwtHeader", "member" : "pdi.jwt.JwtJson4sCommon.readHeader", "link" : "pdi\/jwt\/JwtJson4s.html#readHeader(json:org.json4s.JValue):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "writeClaim", "tail" : "(claim: JwtClaim): JValue", "member" : "pdi.jwt.JwtJson4sCommon.writeClaim", "link" : "pdi\/jwt\/JwtJson4s.html#writeClaim(claim:pdi.jwt.JwtClaim):org.json4s.JValue", "kind" : "def"}, {"label" : "readClaim", "tail" : "(json: JValue): JwtClaim", "member" : "pdi.jwt.JwtJson4sCommon.readClaim", "link" : "pdi\/jwt\/JwtJson4s.html#readClaim(json:org.json4s.JValue):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "getAlgorithm", "tail" : "(header: JObject): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJson4sCommon.getAlgorithm", "link" : "pdi\/jwt\/JwtJson4s.html#getAlgorithm(header:org.json4s.JObject):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JObject, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JObject, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JObject, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JObject): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JObject, claim: JObject, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JObject, claim: JObject, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JObject, claim: JObject): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtJson4s.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtJson4s.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtJson4s.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: JwtHeader, claim: JwtClaim, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtJson4s.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtJson4s.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: JwtClaim, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtJson4s.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtJson4s.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtJson4s.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtJson4s.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtJson4s.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtJson4s.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtJson4s.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtJson4s.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtJson4s.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtJson4s.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtJson4s.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtJson4s.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtJson4s.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtJson4s.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtJson4s.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtJson4s.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtJson4s.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtJson4s.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtJson4s.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtJson4s.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "RichJwtHeader", "tail" : "", "member" : "pdi.jwt.JwtJson4sImplicits.RichJwtHeader", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#RichJwtHeaderextendsAnyRef", "kind" : "implicit class"}, {"label" : "RichJwtClaim", "tail" : "", "member" : "pdi.jwt.JwtJson4sImplicits.RichJwtClaim", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#RichJwtClaimextendsAnyRef", "kind" : "implicit class"}, {"label" : "parseClaim", "tail" : "(claim: String): JwtClaim", "member" : "pdi.jwt.JwtJson4s.parseClaim", "link" : "pdi\/jwt\/JwtJson4s$.html#parseClaim(claim:String):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "parseHeader", "tail" : "(header: String): JwtHeader", "member" : "pdi.jwt.JwtJson4s.parseHeader", "link" : "pdi\/jwt\/JwtJson4s$.html#parseHeader(header:String):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "apply", "tail" : "(clock: Clock): JwtJson4s", "member" : "pdi.jwt.JwtJson4s.apply", "link" : "pdi\/jwt\/JwtJson4s$.html#apply(clock:java.time.Clock):pdi.jwt.JwtJson4s", "kind" : "def"}, {"label" : "formats", "tail" : ": Formats { ... \/* 2 definitions in type refinement *\/ }", "member" : "pdi.jwt.JwtJson4sParser.formats", "link" : "pdi\/jwt\/JwtJson4s$.html#formats:org.json4s.Formats{valdateFormat:org.json4s.DateFormat;valtypeHints:org.json4s.TypeHints}", "kind" : "implicit val"}, {"label" : "stringify", "tail" : "(value: JObject): String", "member" : "pdi.jwt.JwtJson4sParser.stringify", "link" : "pdi\/jwt\/JwtJson4s$.html#stringify(value:org.json4s.JObject):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): JObject", "member" : "pdi.jwt.JwtJson4sParser.parse", "link" : "pdi\/jwt\/JwtJson4s$.html#parse(value:String):org.json4s.JObject", "kind" : "def"}, {"label" : "filterClaimFields", "tail" : "(json: JObject): JObject", "member" : "pdi.jwt.JwtJson4sCommon.filterClaimFields", "link" : "pdi\/jwt\/JwtJson4s$.html#filterClaimFields(json:org.json4s.JObject):org.json4s.JObject", "kind" : "def"}, {"label" : "extractLong", "tail" : "(json: JObject, fieldName: String): Option[Long]", "member" : "pdi.jwt.JwtJson4sCommon.extractLong", "link" : "pdi\/jwt\/JwtJson4s$.html#extractLong(json:org.json4s.JObject,fieldName:String):Option[Long]", "kind" : "def"}, {"label" : "extractStringSetOrString", "tail" : "(json: JObject, fieldName: String): Option[Set[String]]", "member" : "pdi.jwt.JwtJson4sCommon.extractStringSetOrString", "link" : "pdi\/jwt\/JwtJson4s$.html#extractStringSetOrString(json:org.json4s.JObject,fieldName:String):Option[Set[String]]", "kind" : "def"}, {"label" : "extractString", "tail" : "(json: JObject, fieldName: String): Option[String]", "member" : "pdi.jwt.JwtJson4sCommon.extractString", "link" : "pdi\/jwt\/JwtJson4s$.html#extractString(json:org.json4s.JObject,fieldName:String):Option[String]", "kind" : "def"}, {"label" : "writeHeader", "tail" : "(header: JwtHeader): JValue", "member" : "pdi.jwt.JwtJson4sCommon.writeHeader", "link" : "pdi\/jwt\/JwtJson4s$.html#writeHeader(header:pdi.jwt.JwtHeader):org.json4s.JValue", "kind" : "def"}, {"label" : "readHeader", "tail" : "(json: JValue): JwtHeader", "member" : "pdi.jwt.JwtJson4sCommon.readHeader", "link" : "pdi\/jwt\/JwtJson4s$.html#readHeader(json:org.json4s.JValue):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "writeClaim", "tail" : "(claim: JwtClaim): JValue", "member" : "pdi.jwt.JwtJson4sCommon.writeClaim", "link" : "pdi\/jwt\/JwtJson4s$.html#writeClaim(claim:pdi.jwt.JwtClaim):org.json4s.JValue", "kind" : "def"}, {"label" : "readClaim", "tail" : "(json: JValue): JwtClaim", "member" : "pdi.jwt.JwtJson4sCommon.readClaim", "link" : "pdi\/jwt\/JwtJson4s$.html#readClaim(json:org.json4s.JValue):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "getAlgorithm", "tail" : "(header: JObject): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJson4sCommon.getAlgorithm", "link" : "pdi\/jwt\/JwtJson4s$.html#getAlgorithm(header:org.json4s.JObject):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JObject, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JObject, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JObject, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JObject): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JObject, claim: JObject, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JObject, claim: JObject, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JObject, claim: JObject): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtJson4s$.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtJson4s$.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtJson4s$.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4s$.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: JwtHeader, claim: JwtClaim, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4s$.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtJson4s$.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtJson4s$.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: JwtClaim, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtJson4s$.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4s$.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4s$.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4s$.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtJson4s$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtJson4s$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtJson4s$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtJson4s$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtJson4s$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtJson4s$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtJson4s$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtJson4s$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtJson4s$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtJson4s$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtJson4s$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtJson4s$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtJson4s$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtJson4s$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtJson4s$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtJson4s$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtJson4s$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtJson4s$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtJson4s$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pdi\/jwt\/JwtJson4s.html", "kind" : "object"}, {"name" : "pdi.jwt.JwtJson4sImplicits", "members_trait" : [{"label" : "RichJwtHeader", "tail" : "", "member" : "pdi.jwt.JwtJson4sImplicits.RichJwtHeader", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#RichJwtHeaderextendsAnyRef", "kind" : "implicit class"}, {"label" : "RichJwtClaim", "tail" : "", "member" : "pdi.jwt.JwtJson4sImplicits.RichJwtClaim", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#RichJwtClaimextendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtJson4sImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "pdi\/jwt\/JwtJson4sImplicits.html", "kind" : "trait"}, {"name" : "pdi.jwt.JwtJson4sParser", "members_trait" : [{"label" : "RichJwtHeader", "tail" : "", "member" : "pdi.jwt.JwtJson4sImplicits.RichJwtHeader", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#RichJwtHeaderextendsAnyRef", "kind" : "implicit class"}, {"label" : "RichJwtClaim", "tail" : "", "member" : "pdi.jwt.JwtJson4sImplicits.RichJwtClaim", "link" : "pdi\/jwt\/JwtJson4sImplicits.html#RichJwtClaimextendsAnyRef", "kind" : "implicit class"}, {"label" : "formats", "tail" : ": Formats { ... \/* 2 definitions in type refinement *\/ }", "member" : "pdi.jwt.JwtJson4sParser.formats", "link" : "pdi\/jwt\/JwtJson4sParser.html#formats:org.json4s.Formats{valdateFormat:org.json4s.DateFormat;valtypeHints:org.json4s.TypeHints}", "kind" : "implicit val"}, {"label" : "stringify", "tail" : "(value: JObject): String", "member" : "pdi.jwt.JwtJson4sParser.stringify", "link" : "pdi\/jwt\/JwtJson4sParser.html#stringify(value:org.json4s.JObject):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): JObject", "member" : "pdi.jwt.JwtJson4sParser.parse", "link" : "pdi\/jwt\/JwtJson4sParser.html#parse(value:String):org.json4s.JObject", "kind" : "def"}, {"label" : "filterClaimFields", "tail" : "(json: JObject): JObject", "member" : "pdi.jwt.JwtJson4sCommon.filterClaimFields", "link" : "pdi\/jwt\/JwtJson4sParser.html#filterClaimFields(json:org.json4s.JObject):org.json4s.JObject", "kind" : "def"}, {"label" : "extractLong", "tail" : "(json: JObject, fieldName: String): Option[Long]", "member" : "pdi.jwt.JwtJson4sCommon.extractLong", "link" : "pdi\/jwt\/JwtJson4sParser.html#extractLong(json:org.json4s.JObject,fieldName:String):Option[Long]", "kind" : "def"}, {"label" : "extractStringSetOrString", "tail" : "(json: JObject, fieldName: String): Option[Set[String]]", "member" : "pdi.jwt.JwtJson4sCommon.extractStringSetOrString", "link" : "pdi\/jwt\/JwtJson4sParser.html#extractStringSetOrString(json:org.json4s.JObject,fieldName:String):Option[Set[String]]", "kind" : "def"}, {"label" : "extractString", "tail" : "(json: JObject, fieldName: String): Option[String]", "member" : "pdi.jwt.JwtJson4sCommon.extractString", "link" : "pdi\/jwt\/JwtJson4sParser.html#extractString(json:org.json4s.JObject,fieldName:String):Option[String]", "kind" : "def"}, {"label" : "writeHeader", "tail" : "(header: JwtHeader): JValue", "member" : "pdi.jwt.JwtJson4sCommon.writeHeader", "link" : "pdi\/jwt\/JwtJson4sParser.html#writeHeader(header:pdi.jwt.JwtHeader):org.json4s.JValue", "kind" : "def"}, {"label" : "readHeader", "tail" : "(json: JValue): JwtHeader", "member" : "pdi.jwt.JwtJson4sCommon.readHeader", "link" : "pdi\/jwt\/JwtJson4sParser.html#readHeader(json:org.json4s.JValue):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "writeClaim", "tail" : "(claim: JwtClaim): JValue", "member" : "pdi.jwt.JwtJson4sCommon.writeClaim", "link" : "pdi\/jwt\/JwtJson4sParser.html#writeClaim(claim:pdi.jwt.JwtClaim):org.json4s.JValue", "kind" : "def"}, {"label" : "readClaim", "tail" : "(json: JValue): JwtClaim", "member" : "pdi.jwt.JwtJson4sCommon.readClaim", "link" : "pdi\/jwt\/JwtJson4sParser.html#readClaim(json:org.json4s.JValue):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "getAlgorithm", "tail" : "(header: JObject): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJson4sCommon.getAlgorithm", "link" : "pdi\/jwt\/JwtJson4sParser.html#getAlgorithm(header:org.json4s.JObject):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[JObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(JObject, JObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JObject, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JObject, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JObject, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JObject): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JObject, claim: JObject, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JObject, claim: JObject, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JObject, claim: JObject): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtJson4sParser.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtJson4sParser.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtJson4sParser.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtJson4sParser.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: H, claim: C, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtJson4sParser.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtJson4sParser.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtJson4sParser.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: C, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtJson4sParser.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtJson4sParser.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtJson4sParser.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtJson4sParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtJson4sParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtJson4sParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtJson4sParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtJson4sParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtJson4sParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtJson4sParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtJson4sParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtJson4sParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtJson4sParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtJson4sParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtJson4sParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtJson4sParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtJson4sParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtJson4sParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtJson4sParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtJson4sParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtJson4sParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtJson4sParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extractNotBefore", "tail" : "(claim: C): Option[Long]", "member" : "pdi.jwt.JwtCore.extractNotBefore", "link" : "pdi\/jwt\/JwtJson4sParser.html#extractNotBefore(claim:C):Option[Long]", "kind" : "abstract def"}, {"label" : "extractExpiration", "tail" : "(claim: C): Option[Long]", "member" : "pdi.jwt.JwtCore.extractExpiration", "link" : "pdi\/jwt\/JwtJson4sParser.html#extractExpiration(claim:C):Option[Long]", "kind" : "abstract def"}, {"label" : "extractAlgorithm", "tail" : "(header: H): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtCore.extractAlgorithm", "link" : "pdi\/jwt\/JwtJson4sParser.html#extractAlgorithm(header:H):Option[pdi.jwt.JwtAlgorithm]", "kind" : "abstract def"}, {"label" : "parseClaim", "tail" : "(claim: String): C", "member" : "pdi.jwt.JwtCore.parseClaim", "link" : "pdi\/jwt\/JwtJson4sParser.html#parseClaim(claim:String):C", "kind" : "abstract def"}, {"label" : "parseHeader", "tail" : "(header: String): H", "member" : "pdi.jwt.JwtCore.parseHeader", "link" : "pdi\/jwt\/JwtJson4sParser.html#parseHeader(header:String):H", "kind" : "abstract def"}], "shortDescription" : "Implementation of JwtCore using JObject from Json4s Native.", "trait" : "pdi\/jwt\/JwtJson4sParser.html", "kind" : "trait"}, {"name" : "pdi.jwt.JwtPlayImplicits", "members_trait" : [{"label" : "RichRequestHeader", "tail" : "", "member" : "pdi.jwt.JwtPlayImplicits.RichRequestHeader", "link" : "pdi\/jwt\/JwtPlayImplicits.html#RichRequestHeaderextendsAnyRef", "kind" : "implicit class"}, {"label" : "RichResult", "tail" : "", "member" : "pdi.jwt.JwtPlayImplicits.RichResult", "link" : "pdi\/jwt\/JwtPlayImplicits.html#RichResultextendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtPlayImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtPlayImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtPlayImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtPlayImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtPlayImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtPlayImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtPlayImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtPlayImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtPlayImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtPlayImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtPlayImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtPlayImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtPlayImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtPlayImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtPlayImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtPlayImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtPlayImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtPlayImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtPlayImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "pdi\/jwt\/JwtPlayImplicits.html", "kind" : "trait"}, {"name" : "pdi.jwt.JwtSession", "shortDescription" : "Similar to the default Play Session but using JsObject instead of Map[String, String].", "object" : "pdi\/jwt\/JwtSession$.html", "members_object" : [{"label" : "RichRequestHeader", "tail" : "", "member" : "pdi.jwt.JwtPlayImplicits.RichRequestHeader", "link" : "pdi\/jwt\/JwtPlayImplicits.html#RichRequestHeaderextendsAnyRef", "kind" : "implicit class"}, {"label" : "RichResult", "tail" : "", "member" : "pdi.jwt.JwtPlayImplicits.RichResult", "link" : "pdi\/jwt\/JwtPlayImplicits.html#RichResultextendsAnyRef", "kind" : "implicit class"}, {"label" : "RichJwtHeader", "tail" : "", "member" : "pdi.jwt.JwtJsonImplicits.RichJwtHeader", "link" : "pdi\/jwt\/JwtSession$.html#RichJwtHeaderextendsAnyRef", "kind" : "implicit class"}, {"label" : "RichJwtClaim", "tail" : "", "member" : "pdi.jwt.JwtJsonImplicits.RichJwtClaim", "link" : "pdi\/jwt\/JwtSession$.html#RichJwtClaimextendsAnyRef", "kind" : "implicit class"}, {"label" : "apply", "tail" : "(header: JwtHeader, claim: JwtClaim, signature: String)(conf: Configuration, clock: Clock): JwtSession", "member" : "pdi.jwt.JwtSession.apply", "link" : "pdi\/jwt\/JwtSession$.html#apply(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,signature:String)(implicitconf:play.api.Configuration,implicitclock:java.time.Clock):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "apply", "tail" : "(header: JwtHeader, claim: JwtClaim)(conf: Configuration, clock: Clock): JwtSession", "member" : "pdi.jwt.JwtSession.apply", "link" : "pdi\/jwt\/JwtSession$.html#apply(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim)(implicitconf:play.api.Configuration,implicitclock:java.time.Clock):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "apply", "tail" : "(claim: JwtClaim)(conf: Configuration, clock: Clock): JwtSession", "member" : "pdi.jwt.JwtSession.apply", "link" : "pdi\/jwt\/JwtSession$.html#apply(claim:pdi.jwt.JwtClaim)(implicitconf:play.api.Configuration,implicitclock:java.time.Clock):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "apply", "tail" : "(jsHeader: JsObject, jsClaim: JsObject)(conf: Configuration, clock: Clock): JwtSession", "member" : "pdi.jwt.JwtSession.apply", "link" : "pdi\/jwt\/JwtSession$.html#apply(jsHeader:play.api.libs.json.JsObject,jsClaim:play.api.libs.json.JsObject)(implicitconf:play.api.Configuration,implicitclock:java.time.Clock):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "apply", "tail" : "(fields: (String, JsValueWrapper)*)(conf: Configuration, clock: Clock): JwtSession", "member" : "pdi.jwt.JwtSession.apply", "link" : "pdi\/jwt\/JwtSession$.html#apply(fields:(String,play.api.libs.json.Json.JsValueWrapper)*)(implicitconf:play.api.Configuration,implicitclock:java.time.Clock):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "apply", "tail" : "(jsClaim: JsObject)(conf: Configuration, clock: Clock): JwtSession", "member" : "pdi.jwt.JwtSession.apply", "link" : "pdi\/jwt\/JwtSession$.html#apply(jsClaim:play.api.libs.json.JsObject)(implicitconf:play.api.Configuration,implicitclock:java.time.Clock):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "defaultClaim", "tail" : "(conf: Configuration, clock: Clock): JwtClaim", "member" : "pdi.jwt.JwtSession.defaultClaim", "link" : "pdi\/jwt\/JwtSession$.html#defaultClaim(implicitconf:play.api.Configuration,implicitclock:java.time.Clock):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "defaultHeader", "tail" : "(conf: Configuration): JwtHeader", "member" : "pdi.jwt.JwtSession.defaultHeader", "link" : "pdi\/jwt\/JwtSession$.html#defaultHeader(implicitconf:play.api.Configuration):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "deserialize", "tail" : "(token: String)(conf: Configuration, clock: Clock): JwtSession", "member" : "pdi.jwt.JwtSession.deserialize", "link" : "pdi\/jwt\/JwtSession$.html#deserialize(token:String)(implicitconf:play.api.Configuration,implicitclock:java.time.Clock):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "deserialize", "tail" : "(token: String, options: JwtOptions)(conf: Configuration, clock: Clock): JwtSession", "member" : "pdi.jwt.JwtSession.deserialize", "link" : "pdi\/jwt\/JwtSession$.html#deserialize(token:String,options:pdi.jwt.JwtOptions)(implicitconf:play.api.Configuration,implicitclock:java.time.Clock):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "TOKEN_PREFIX", "tail" : "(conf: Configuration): String", "member" : "pdi.jwt.JwtSession.TOKEN_PREFIX", "link" : "pdi\/jwt\/JwtSession$.html#TOKEN_PREFIX(implicitconf:play.api.Configuration):String", "kind" : "def"}, {"label" : "ALGORITHM", "tail" : "(conf: Configuration): JwtAlgorithm", "member" : "pdi.jwt.JwtSession.ALGORITHM", "link" : "pdi\/jwt\/JwtSession$.html#ALGORITHM(implicitconf:play.api.Configuration):pdi.jwt.JwtAlgorithm", "kind" : "def"}, {"label" : "MAX_AGE", "tail" : "(conf: Configuration): Option[Long]", "member" : "pdi.jwt.JwtSession.MAX_AGE", "link" : "pdi\/jwt\/JwtSession$.html#MAX_AGE(implicitconf:play.api.Configuration):Option[Long]", "kind" : "def"}, {"label" : "RESPONSE_HEADER_NAME", "tail" : "(conf: Configuration): String", "member" : "pdi.jwt.JwtSession.RESPONSE_HEADER_NAME", "link" : "pdi\/jwt\/JwtSession$.html#RESPONSE_HEADER_NAME(implicitconf:play.api.Configuration):String", "kind" : "def"}, {"label" : "REQUEST_HEADER_NAME", "tail" : "(conf: Configuration): String", "member" : "pdi.jwt.JwtSession.REQUEST_HEADER_NAME", "link" : "pdi\/jwt\/JwtSession$.html#REQUEST_HEADER_NAME(implicitconf:play.api.Configuration):String", "kind" : "def"}, {"label" : "jwtPlayJsonHeaderWriter", "tail" : ": Writes[JwtHeader]", "member" : "pdi.jwt.JwtJsonImplicits.jwtPlayJsonHeaderWriter", "link" : "pdi\/jwt\/JwtSession$.html#jwtPlayJsonHeaderWriter:play.api.libs.json.Writes[pdi.jwt.JwtHeader]", "kind" : "implicit val"}, {"label" : "jwtPlayJsonHeaderReader", "tail" : ": Reads[JwtHeader]", "member" : "pdi.jwt.JwtJsonImplicits.jwtPlayJsonHeaderReader", "link" : "pdi\/jwt\/JwtSession$.html#jwtPlayJsonHeaderReader:play.api.libs.json.Reads[pdi.jwt.JwtHeader]", "kind" : "implicit val"}, {"label" : "jwtPlayJsonClaimWriter", "tail" : ": Writes[JwtClaim]", "member" : "pdi.jwt.JwtJsonImplicits.jwtPlayJsonClaimWriter", "link" : "pdi\/jwt\/JwtSession$.html#jwtPlayJsonClaimWriter:play.api.libs.json.Writes[pdi.jwt.JwtClaim]", "kind" : "implicit val"}, {"label" : "jwtPlayJsonClaimReader", "tail" : ": Reads[JwtClaim]", "member" : "pdi.jwt.JwtJsonImplicits.jwtPlayJsonClaimReader", "link" : "pdi\/jwt\/JwtSession$.html#jwtPlayJsonClaimReader:play.api.libs.json.Reads[pdi.jwt.JwtClaim]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtSession$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtSession$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtSession$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtSession$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtSession$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtSession$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtSession$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSession$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSession$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSession$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtSession$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtSession$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtSession$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtSession$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtSession$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtSession$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtSession$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtSession$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtSession$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "refresh", "tail" : "(): JwtSession", "member" : "pdi.jwt.JwtSession.refresh", "link" : "pdi\/jwt\/JwtSession.html#refresh():pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "withSignature", "tail" : "(signature: String): JwtSession", "member" : "pdi.jwt.JwtSession.withSignature", "link" : "pdi\/jwt\/JwtSession.html#withSignature(signature:String):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "withHeader", "tail" : "(header: JwtHeader): JwtSession", "member" : "pdi.jwt.JwtSession.withHeader", "link" : "pdi\/jwt\/JwtSession.html#withHeader(header:pdi.jwt.JwtHeader):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "withClaim", "tail" : "(claim: JwtClaim): JwtSession", "member" : "pdi.jwt.JwtSession.withClaim", "link" : "pdi\/jwt\/JwtSession.html#withClaim(claim:pdi.jwt.JwtClaim):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "serialize", "tail" : "(): String", "member" : "pdi.jwt.JwtSession.serialize", "link" : "pdi\/jwt\/JwtSession.html#serialize:String", "kind" : "def"}, {"label" : "header", "tail" : "(): JwtHeader", "member" : "pdi.jwt.JwtSession.header", "link" : "pdi\/jwt\/JwtSession.html#header:pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "claim", "tail" : "(): JwtClaim", "member" : "pdi.jwt.JwtSession.claim", "link" : "pdi\/jwt\/JwtSession.html#claim:pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "pdi.jwt.JwtSession.isEmpty", "link" : "pdi\/jwt\/JwtSession.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(fieldName: String): Option[JsValue]", "member" : "pdi.jwt.JwtSession.apply", "link" : "pdi\/jwt\/JwtSession.html#apply(fieldName:String):Option[play.api.libs.json.JsValue]", "kind" : "def"}, {"label" : "getAs", "tail" : "(fieldName: String)(reader: Reads[T]): Option[T]", "member" : "pdi.jwt.JwtSession.getAs", "link" : "pdi\/jwt\/JwtSession.html#getAs[T](fieldName:String)(implicitreader:play.api.libs.json.Reads[T]):Option[T]", "kind" : "def"}, {"label" : "get", "tail" : "(fieldName: String): Option[JsValue]", "member" : "pdi.jwt.JwtSession.get", "link" : "pdi\/jwt\/JwtSession.html#get(fieldName:String):Option[play.api.libs.json.JsValue]", "kind" : "def"}, {"label" : "--", "tail" : "(fieldNames: String*): JwtSession", "member" : "pdi.jwt.JwtSession.--", "link" : "pdi\/jwt\/JwtSession.html#--(fieldNames:String*):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "-", "tail" : "(fieldName: String): JwtSession", "member" : "pdi.jwt.JwtSession.-", "link" : "pdi\/jwt\/JwtSession.html#-(fieldName:String):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "++", "tail" : "(fields: (String, JsValueWrapper)*): JwtSession", "member" : "pdi.jwt.JwtSession.++", "link" : "pdi\/jwt\/JwtSession.html#++(fields:(String,play.api.libs.json.Json.JsValueWrapper)*):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "+", "tail" : "(key: String, value: T)(writer: Writes[T]): JwtSession", "member" : "pdi.jwt.JwtSession.+", "link" : "pdi\/jwt\/JwtSession.html#+[T](key:String,value:T)(implicitwriter:play.api.libs.json.Writes[T]):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "+", "tail" : "(key: String, value: JsValueWrapper): JwtSession", "member" : "pdi.jwt.JwtSession.+", "link" : "pdi\/jwt\/JwtSession.html#+(key:String,value:play.api.libs.json.Json.JsValueWrapper):pdi.jwt.JwtSession", "kind" : "def"}, {"label" : "+", "tail" : "(value: JsObject): JwtSession", "member" : "pdi.jwt.JwtSession.+", "link" : "pdi\/jwt\/JwtSession.html#+(value:play.api.libs.json.JsObject):pdi.jwt.JwtSession", "kind" : "def"}, {"member" : "pdi.jwt.JwtSession#<init>", "error" : "unsupported entity"}, {"label" : "signature", "tail" : ": String", "member" : "pdi.jwt.JwtSession.signature", "link" : "pdi\/jwt\/JwtSession.html#signature:String", "kind" : "val"}, {"label" : "claimData", "tail" : ": JsObject", "member" : "pdi.jwt.JwtSession.claimData", "link" : "pdi\/jwt\/JwtSession.html#claimData:play.api.libs.json.JsObject", "kind" : "val"}, {"label" : "headerData", "tail" : ": JsObject", "member" : "pdi.jwt.JwtSession.headerData", "link" : "pdi\/jwt\/JwtSession.html#headerData:play.api.libs.json.JsObject", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtSession.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtSession.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtSession.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtSession.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtSession.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtSession.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtSession.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSession.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSession.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSession.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtSession.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtSession.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtSession.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtSession.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtSession.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtSession.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "pdi\/jwt\/JwtSession.html", "kind" : "case class"}, {"name" : "pdi.jwt.JwtSprayJson", "shortDescription" : "", "object" : "pdi\/jwt\/JwtSprayJson$.html", "members_class" : [{"label" : "parseClaim", "tail" : "(header: String): JwtClaim", "member" : "pdi.jwt.JwtSprayJson.parseClaim", "link" : "pdi\/jwt\/JwtSprayJson.html#parseClaim(header:String):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "parseHeader", "tail" : "(header: String): JwtHeader", "member" : "pdi.jwt.JwtSprayJson.parseHeader", "link" : "pdi\/jwt\/JwtSprayJson.html#parseHeader(header:String):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "clock", "tail" : ": Clock", "member" : "pdi.jwt.JwtSprayJson.clock", "link" : "pdi\/jwt\/JwtSprayJson.html#clock:java.time.Clock", "kind" : "val"}, {"label" : "getAlgorithm", "tail" : "(header: JsObject): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtSprayJsonParser.getAlgorithm", "link" : "pdi\/jwt\/JwtSprayJson.html#getAlgorithm(header:spray.json.JsObject):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "stringify", "tail" : "(value: JsObject): String", "member" : "pdi.jwt.JwtSprayJsonParser.stringify", "link" : "pdi\/jwt\/JwtSprayJson.html#stringify(value:spray.json.JsObject):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): JsObject", "member" : "pdi.jwt.JwtSprayJsonParser.parse", "link" : "pdi\/jwt\/JwtSprayJson.html#parse(value:String):spray.json.JsObject", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JsObject, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JsObject, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JsObject, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JsObject): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JsObject, claim: JsObject, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JsObject, claim: JsObject, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JsObject, claim: JsObject): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtSprayJson.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtSprayJson.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtSprayJson.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: JwtHeader, claim: JwtClaim, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtSprayJson.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtSprayJson.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: JwtClaim, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtSprayJson.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtSprayJson.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtSprayJson.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtSprayJson.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtSprayJson.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtSprayJson.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtSprayJson.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtSprayJson.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSprayJson.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSprayJson.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSprayJson.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtSprayJson.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtSprayJson.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtSprayJson.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtSprayJson.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtSprayJson.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtSprayJson.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtSprayJson.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtSprayJson.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtSprayJson.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parseClaim", "tail" : "(claim: String): JwtClaim", "member" : "pdi.jwt.JwtSprayJson.parseClaim", "link" : "pdi\/jwt\/JwtSprayJson$.html#parseClaim(claim:String):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "parseHeader", "tail" : "(header: String): JwtHeader", "member" : "pdi.jwt.JwtSprayJson.parseHeader", "link" : "pdi\/jwt\/JwtSprayJson$.html#parseHeader(header:String):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "apply", "tail" : "(clock: Clock): JwtSprayJson", "member" : "pdi.jwt.JwtSprayJson.apply", "link" : "pdi\/jwt\/JwtSprayJson$.html#apply(clock:java.time.Clock):pdi.jwt.JwtSprayJson", "kind" : "def"}, {"label" : "getAlgorithm", "tail" : "(header: JsObject): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtSprayJsonParser.getAlgorithm", "link" : "pdi\/jwt\/JwtSprayJson$.html#getAlgorithm(header:spray.json.JsObject):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "stringify", "tail" : "(value: JsObject): String", "member" : "pdi.jwt.JwtSprayJsonParser.stringify", "link" : "pdi\/jwt\/JwtSprayJson$.html#stringify(value:spray.json.JsObject):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): JsObject", "member" : "pdi.jwt.JwtSprayJsonParser.parse", "link" : "pdi\/jwt\/JwtSprayJson$.html#parse(value:String):spray.json.JsObject", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JsObject, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JsObject, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JsObject, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JsObject): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JsObject, claim: JsObject, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JsObject, claim: JsObject, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JsObject, claim: JsObject): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtSprayJson$.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtSprayJson$.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtSprayJson$.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJson$.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: JwtHeader, claim: JwtClaim, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJson$.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtSprayJson$.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtSprayJson$.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: JwtClaim, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtSprayJson$.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJson$.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJson$.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtSprayJson$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtSprayJson$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtSprayJson$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtSprayJson$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtSprayJson$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtSprayJson$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtSprayJson$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSprayJson$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSprayJson$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSprayJson$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtSprayJson$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtSprayJson$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtSprayJson$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtSprayJson$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtSprayJson$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtSprayJson$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtSprayJson$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtSprayJson$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtSprayJson$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pdi\/jwt\/JwtSprayJson.html", "kind" : "object"}, {"name" : "pdi.jwt.JwtSprayJsonParser", "members_trait" : [{"label" : "getAlgorithm", "tail" : "(header: JsObject): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtSprayJsonParser.getAlgorithm", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#getAlgorithm(header:spray.json.JsObject):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "stringify", "tail" : "(value: JsObject): String", "member" : "pdi.jwt.JwtSprayJsonParser.stringify", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#stringify(value:spray.json.JsObject):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): JsObject", "member" : "pdi.jwt.JwtSprayJsonParser.parse", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#parse(value:String):spray.json.JsObject", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[JsObject]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(JsObject, JsObject, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JsObject, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JsObject, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JsObject, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JsObject): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JsObject, claim: JsObject, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JsObject, claim: JsObject, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JsObject, claim: JsObject): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: H, claim: C, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: C, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtSprayJsonParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extractNotBefore", "tail" : "(claim: C): Option[Long]", "member" : "pdi.jwt.JwtCore.extractNotBefore", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#extractNotBefore(claim:C):Option[Long]", "kind" : "abstract def"}, {"label" : "extractExpiration", "tail" : "(claim: C): Option[Long]", "member" : "pdi.jwt.JwtCore.extractExpiration", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#extractExpiration(claim:C):Option[Long]", "kind" : "abstract def"}, {"label" : "extractAlgorithm", "tail" : "(header: H): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtCore.extractAlgorithm", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#extractAlgorithm(header:H):Option[pdi.jwt.JwtAlgorithm]", "kind" : "abstract def"}, {"label" : "parseClaim", "tail" : "(claim: String): C", "member" : "pdi.jwt.JwtCore.parseClaim", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#parseClaim(claim:String):C", "kind" : "abstract def"}, {"label" : "parseHeader", "tail" : "(header: String): H", "member" : "pdi.jwt.JwtCore.parseHeader", "link" : "pdi\/jwt\/JwtSprayJsonParser.html#parseHeader(header:String):H", "kind" : "abstract def"}], "shortDescription" : "Implementation of JwtCore using JsObject from spray-json.", "trait" : "pdi\/jwt\/JwtSprayJsonParser.html", "kind" : "trait"}, {"name" : "pdi.jwt.JwtUpickle", "shortDescription" : "", "object" : "pdi\/jwt\/JwtUpickle$.html", "members_class" : [{"label" : "parseClaim", "tail" : "(claim: String): JwtClaim", "member" : "pdi.jwt.JwtUpickle.parseClaim", "link" : "pdi\/jwt\/JwtUpickle.html#parseClaim(claim:String):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "parseHeader", "tail" : "(header: String): JwtHeader", "member" : "pdi.jwt.JwtUpickle.parseHeader", "link" : "pdi\/jwt\/JwtUpickle.html#parseHeader(header:String):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "clock", "tail" : ": Clock", "member" : "pdi.jwt.JwtUpickle.clock", "link" : "pdi\/jwt\/JwtUpickle.html#clock:java.time.Clock", "kind" : "val"}, {"label" : "getAlgorithm", "tail" : "(header: Value): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtUpickleParser.getAlgorithm", "link" : "pdi\/jwt\/JwtUpickle.html#getAlgorithm(header:ujson.Value):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "stringify", "tail" : "(value: Value): String", "member" : "pdi.jwt.JwtUpickleParser.stringify", "link" : "pdi\/jwt\/JwtUpickle.html#stringify(value:ujson.Value):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): Value", "member" : "pdi.jwt.JwtUpickleParser.parse", "link" : "pdi\/jwt\/JwtUpickle.html#parse(value:String):ujson.Value", "kind" : "def"}, {"label" : "jwtUpickleClaimReadWrite", "tail" : ": upickle.default.ReadWriter[JwtClaim]", "member" : "pdi.jwt.JwtUpickleImplicits.jwtUpickleClaimReadWrite", "link" : "pdi\/jwt\/JwtUpickle.html#jwtUpickleClaimReadWrite:upickle.default.ReadWriter[pdi.jwt.JwtClaim]", "kind" : "implicit val"}, {"label" : "jwtUpickleHeaderReadWrite", "tail" : ": upickle.default.ReadWriter[JwtHeader]", "member" : "pdi.jwt.JwtUpickleImplicits.jwtUpickleHeaderReadWrite", "link" : "pdi\/jwt\/JwtUpickle.html#jwtUpickleHeaderReadWrite:upickle.default.ReadWriter[pdi.jwt.JwtHeader]", "kind" : "implicit val"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Value, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Value, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Value, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Value): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Value, claim: Value, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Value, claim: Value, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Value, claim: Value): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtUpickle.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtUpickle.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtUpickle.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: JwtHeader, claim: JwtClaim, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtUpickle.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtUpickle.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: JwtClaim, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtUpickle.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtUpickle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtUpickle.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtUpickle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtUpickle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtUpickle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtUpickle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtUpickle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtUpickle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtUpickle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtUpickle.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtUpickle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtUpickle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtUpickle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtUpickle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtUpickle.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtUpickle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtUpickle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtUpickle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtUpickle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parseClaim", "tail" : "(claim: String): JwtClaim", "member" : "pdi.jwt.JwtUpickle.parseClaim", "link" : "pdi\/jwt\/JwtUpickle$.html#parseClaim(claim:String):pdi.jwt.JwtClaim", "kind" : "def"}, {"label" : "parseHeader", "tail" : "(header: String): JwtHeader", "member" : "pdi.jwt.JwtUpickle.parseHeader", "link" : "pdi\/jwt\/JwtUpickle$.html#parseHeader(header:String):pdi.jwt.JwtHeader", "kind" : "def"}, {"label" : "apply", "tail" : "(clock: Clock): JwtUpickle", "member" : "pdi.jwt.JwtUpickle.apply", "link" : "pdi\/jwt\/JwtUpickle$.html#apply(clock:java.time.Clock):pdi.jwt.JwtUpickle", "kind" : "def"}, {"label" : "getAlgorithm", "tail" : "(header: Value): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtUpickleParser.getAlgorithm", "link" : "pdi\/jwt\/JwtUpickle$.html#getAlgorithm(header:ujson.Value):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "stringify", "tail" : "(value: Value): String", "member" : "pdi.jwt.JwtUpickleParser.stringify", "link" : "pdi\/jwt\/JwtUpickle$.html#stringify(value:ujson.Value):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): Value", "member" : "pdi.jwt.JwtUpickleParser.parse", "link" : "pdi\/jwt\/JwtUpickle$.html#parse(value:String):ujson.Value", "kind" : "def"}, {"label" : "jwtUpickleClaimReadWrite", "tail" : ": upickle.default.ReadWriter[JwtClaim]", "member" : "pdi.jwt.JwtUpickleImplicits.jwtUpickleClaimReadWrite", "link" : "pdi\/jwt\/JwtUpickle$.html#jwtUpickleClaimReadWrite:upickle.default.ReadWriter[pdi.jwt.JwtClaim]", "kind" : "implicit val"}, {"label" : "jwtUpickleHeaderReadWrite", "tail" : ": upickle.default.ReadWriter[JwtHeader]", "member" : "pdi.jwt.JwtUpickleImplicits.jwtUpickleHeaderReadWrite", "link" : "pdi\/jwt\/JwtUpickle$.html#jwtUpickleHeaderReadWrite:upickle.default.ReadWriter[pdi.jwt.JwtHeader]", "kind" : "implicit val"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Value, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Value, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Value, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Value): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Value, claim: Value, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Value, claim: Value, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Value, claim: Value): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtUpickle$.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtUpickle$.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtUpickle$.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickle$.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: JwtHeader, claim64: String, claim: JwtClaim, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: JwtHeader, claim: JwtClaim, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickle$.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtUpickle$.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtUpickle$.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: JwtClaim, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtUpickle$.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[JwtClaim]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickle$.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(JwtHeader, JwtClaim, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickle$.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickle$.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtUpickle$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtUpickle$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtUpickle$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtUpickle$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtUpickle$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtUpickle$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtUpickle$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtUpickle$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtUpickle$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtUpickle$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtUpickle$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtUpickle$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtUpickle$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtUpickle$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtUpickle$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtUpickle$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtUpickle$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtUpickle$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtUpickle$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pdi\/jwt\/JwtUpickle.html", "kind" : "object"}, {"name" : "pdi.jwt.JwtUpickleImplicits", "members_trait" : [{"label" : "jwtUpickleClaimReadWrite", "tail" : ": upickle.default.ReadWriter[JwtClaim]", "member" : "pdi.jwt.JwtUpickleImplicits.jwtUpickleClaimReadWrite", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#jwtUpickleClaimReadWrite:upickle.default.ReadWriter[pdi.jwt.JwtClaim]", "kind" : "implicit val"}, {"label" : "jwtUpickleHeaderReadWrite", "tail" : ": upickle.default.ReadWriter[JwtHeader]", "member" : "pdi.jwt.JwtUpickleImplicits.jwtUpickleHeaderReadWrite", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#jwtUpickleHeaderReadWrite:upickle.default.ReadWriter[pdi.jwt.JwtHeader]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtUpickleImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtUpickleImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "pdi\/jwt\/JwtUpickleImplicits.html", "kind" : "trait"}, {"name" : "pdi.jwt.JwtUpickleParser", "members_trait" : [{"label" : "getAlgorithm", "tail" : "(header: Value): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtUpickleParser.getAlgorithm", "link" : "pdi\/jwt\/JwtUpickleParser.html#getAlgorithm(header:ujson.Value):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "stringify", "tail" : "(value: Value): String", "member" : "pdi.jwt.JwtUpickleParser.stringify", "link" : "pdi\/jwt\/JwtUpickleParser.html#stringify(value:ujson.Value):String", "kind" : "def"}, {"label" : "parse", "tail" : "(value: String): Value", "member" : "pdi.jwt.JwtUpickleParser.parse", "link" : "pdi\/jwt\/JwtUpickleParser.html#parse(value:String):ujson.Value", "kind" : "def"}, {"label" : "jwtUpickleClaimReadWrite", "tail" : ": upickle.default.ReadWriter[JwtClaim]", "member" : "pdi.jwt.JwtUpickleImplicits.jwtUpickleClaimReadWrite", "link" : "pdi\/jwt\/JwtUpickleParser.html#jwtUpickleClaimReadWrite:upickle.default.ReadWriter[pdi.jwt.JwtClaim]", "kind" : "implicit val"}, {"label" : "jwtUpickleHeaderReadWrite", "tail" : ": upickle.default.ReadWriter[JwtHeader]", "member" : "pdi.jwt.JwtUpickleImplicits.jwtUpickleHeaderReadWrite", "link" : "pdi\/jwt\/JwtUpickleParser.html#jwtUpickleHeaderReadWrite:upickle.default.ReadWriter[pdi.jwt.JwtHeader]", "kind" : "implicit val"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String,key:java.security.PublicKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String,key:javax.crypto.SecretKey):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJson", "tail" : "(token: String, options: JwtOptions): Try[Value]", "member" : "pdi.jwt.JwtJsonCommon.decodeJson", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJson(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[J]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String,key:java.security.PublicKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "decodeJsonAll", "tail" : "(token: String, options: JwtOptions): Try[(Value, Value, String)]", "member" : "pdi.jwt.JwtJsonCommon.decodeJsonAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeJsonAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(J,J,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Value, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(claim:J,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Value, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(claim:J,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Value, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(claim:J,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: Value): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(claim:J):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Value, claim: Value, key: Key): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(header:J,claim:J,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Value, claim: Value, key: String): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(header:J,claim:J,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: Value, claim: Value): String", "member" : "pdi.jwt.JwtJsonCommon.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(header:J,claim:J):String", "kind" : "def"}, {"label" : "extractNotBefore", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractNotBefore", "link" : "pdi\/jwt\/JwtUpickleParser.html#extractNotBefore(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractExpiration", "tail" : "(claim: JwtClaim): Option[Long]", "member" : "pdi.jwt.JwtJsonCommon.extractExpiration", "link" : "pdi\/jwt\/JwtUpickleParser.html#extractExpiration(claim:pdi.jwt.JwtClaim):Option[Long]", "kind" : "def"}, {"label" : "extractAlgorithm", "tail" : "(header: JwtHeader): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtJsonCommon.extractAlgorithm", "link" : "pdi\/jwt\/JwtUpickleParser.html#extractAlgorithm(header:pdi.jwt.JwtHeader):Option[pdi.jwt.JwtAlgorithm]", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String,key:java.security.PublicKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String,key:javax.crypto.SecretKey):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String):Boolean", "kind" : "def"}, {"label" : "isValid", "tail" : "(token: String, options: JwtOptions): Boolean", "member" : "pdi.jwt.JwtCore.isValid", "link" : "pdi\/jwt\/JwtUpickleParser.html#isValid(token:String,options:pdi.jwt.JwtOptions):Boolean", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String,key:java.security.PublicKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String,key:javax.crypto.SecretKey):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(token: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(token:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header64: String, header: H, claim64: String, claim: C, signature: String, options: JwtOptions, verify: (Array[Byte], Array[Byte], JwtAlgorithm) ⇒ Boolean): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(header64:String,header:H,claim64:String,claim:C,signature:String,options:pdi.jwt.JwtOptions,verify:(Array[Byte],Array[Byte],pdi.jwt.JwtAlgorithm)=>Boolean):Unit", "kind" : "def"}, {"label" : "validate", "tail" : "(header: H, claim: C, signature: String, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validate", "link" : "pdi\/jwt\/JwtUpickleParser.html#validate(header:H,claim:C,signature:String,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "validateAsymmetricAlgorithm", "tail" : "(algorithm: JwtAsymmetricAlgorithm, algorithms: Seq[JwtAsymmetricAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateAsymmetricAlgorithm", "link" : "pdi\/jwt\/JwtUpickleParser.html#validateAsymmetricAlgorithm(algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateHmacAlgorithm", "tail" : "(algorithm: JwtHmacAlgorithm, algorithms: Seq[JwtHmacAlgorithm]): Boolean", "member" : "pdi.jwt.JwtCore.validateHmacAlgorithm", "link" : "pdi\/jwt\/JwtUpickleParser.html#validateHmacAlgorithm(algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):Boolean", "kind" : "def"}, {"label" : "validateTiming", "tail" : "(claim: C, options: JwtOptions): Unit", "member" : "pdi.jwt.JwtCore.validateTiming", "link" : "pdi\/jwt\/JwtUpickleParser.html#validateTiming(claim:C,options:pdi.jwt.JwtOptions):Unit", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String,key:java.security.PublicKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String,key:javax.crypto.SecretKey):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String):scala.util.Try[C]", "kind" : "def"}, {"label" : "decode", "tail" : "(token: String, options: JwtOptions): Try[C]", "member" : "pdi.jwt.JwtCore.decode", "link" : "pdi\/jwt\/JwtUpickleParser.html#decode(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[C]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String,key:java.security.PublicKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeAll", "tail" : "(token: String, options: JwtOptions): Try[(H, C, String)]", "member" : "pdi.jwt.JwtCore.decodeAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(H,C,String)]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String,key:java.security.PublicKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRaw", "tail" : "(token: String, options: JwtOptions): Try[String]", "member" : "pdi.jwt.JwtCore.decodeRaw", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRaw(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[String]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String,key:java.security.PublicKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String,key:java.security.PublicKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: PublicKey, algorithms: Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String,key:java.security.PublicKey,algorithms:Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: SecretKey, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String,key:javax.crypto.SecretKey,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: ⇒ Seq[JwtAsymmetricAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String,key:String,algorithms:=>Seq[pdi.jwt.algorithms.JwtAsymmetricAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm]): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm]):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, key: String, algorithms: Seq[JwtHmacAlgorithm], options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String,key:String,algorithms:Seq[pdi.jwt.algorithms.JwtHmacAlgorithm],options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "decodeRawAll", "tail" : "(token: String, options: JwtOptions): Try[(String, String, String)]", "member" : "pdi.jwt.JwtCore.decodeRawAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#decodeRawAll(token:String,options:pdi.jwt.JwtOptions):scala.util.Try[(String,String,String)]", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: Key): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:java.security.Key):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim, key: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim,key:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: JwtHeader, claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(header:pdi.jwt.JwtHeader,claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(claim:pdi.jwt.JwtClaim,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(claim:pdi.jwt.JwtClaim,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(claim:pdi.jwt.JwtClaim,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: JwtClaim): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(claim:pdi.jwt.JwtClaim):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(claim:String):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: PrivateKey, algorithm: JwtAsymmetricAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(header:String,claim:String,key:java.security.PrivateKey,algorithm:pdi.jwt.algorithms.JwtAsymmetricAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: SecretKey, algorithm: JwtHmacAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(header:String,claim:String,key:javax.crypto.SecretKey,algorithm:pdi.jwt.algorithms.JwtHmacAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String, key: String, algorithm: JwtAlgorithm): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(header:String,claim:String,key:String,algorithm:pdi.jwt.JwtAlgorithm):String", "kind" : "def"}, {"label" : "encode", "tail" : "(header: String, claim: String): String", "member" : "pdi.jwt.JwtCore.encode", "link" : "pdi\/jwt\/JwtUpickleParser.html#encode(header:String,claim:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pdi\/jwt\/JwtUpickleParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pdi\/jwt\/JwtUpickleParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pdi\/jwt\/JwtUpickleParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pdi\/jwt\/JwtUpickleParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pdi\/jwt\/JwtUpickleParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pdi\/jwt\/JwtUpickleParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pdi\/jwt\/JwtUpickleParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtUpickleParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtUpickleParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pdi\/jwt\/JwtUpickleParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pdi\/jwt\/JwtUpickleParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pdi\/jwt\/JwtUpickleParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pdi\/jwt\/JwtUpickleParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pdi\/jwt\/JwtUpickleParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pdi\/jwt\/JwtUpickleParser.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pdi\/jwt\/JwtUpickleParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pdi\/jwt\/JwtUpickleParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pdi\/jwt\/JwtUpickleParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pdi\/jwt\/JwtUpickleParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "extractNotBefore", "tail" : "(claim: C): Option[Long]", "member" : "pdi.jwt.JwtCore.extractNotBefore", "link" : "pdi\/jwt\/JwtUpickleParser.html#extractNotBefore(claim:C):Option[Long]", "kind" : "abstract def"}, {"label" : "extractExpiration", "tail" : "(claim: C): Option[Long]", "member" : "pdi.jwt.JwtCore.extractExpiration", "link" : "pdi\/jwt\/JwtUpickleParser.html#extractExpiration(claim:C):Option[Long]", "kind" : "abstract def"}, {"label" : "extractAlgorithm", "tail" : "(header: H): Option[JwtAlgorithm]", "member" : "pdi.jwt.JwtCore.extractAlgorithm", "link" : "pdi\/jwt\/JwtUpickleParser.html#extractAlgorithm(header:H):Option[pdi.jwt.JwtAlgorithm]", "kind" : "abstract def"}, {"label" : "parseClaim", "tail" : "(claim: String): C", "member" : "pdi.jwt.JwtCore.parseClaim", "link" : "pdi\/jwt\/JwtUpickleParser.html#parseClaim(claim:String):C", "kind" : "abstract def"}, {"label" : "parseHeader", "tail" : "(header: String): H", "member" : "pdi.jwt.JwtCore.parseHeader", "link" : "pdi\/jwt\/JwtUpickleParser.html#parseHeader(header:String):H", "kind" : "abstract def"}], "shortDescription" : "Implementation of JwtCore using Js.Value from uPickle.", "trait" : "pdi\/jwt\/JwtUpickleParser.html", "kind" : "trait"}]};